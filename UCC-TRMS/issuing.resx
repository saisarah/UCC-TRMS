<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Guna2Elipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tbSearchThesis.IconRight" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAB
        1wAAAdcBjJIIaAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAASDSURBVHhe7dtH
        yCRFHIbxb42Y0xowiwt6NBxMB3M4iPFgOrjLmjGtinpQEBEDelBEPZkVTKgHPSmIitldURQToqgHc875
        ecCG8eNfPdPd1TO1n/PCj4WFra6p6am8MxmzInbBubgFz+ID/IC///3zC7yOR3E1jsQmWG6zAvbFnfgS
        ftCm/sRzOA8bYbnIyjgR7yH6UG39gluxPYrNYXgf0QfI5XfcgA1RTDbGw4gq3JfPcCgmnj3wMaJKjsNN
        8Gc3kRyH3xBVLOUj+LbY01+Ak3E2LsLNcIT4FdG/TXkM62KsseL20lGFZnsN9uTbYpSshoNwO6qhcphX
        sB7GkqPxF6KKDHoa+6NL5uMSfI/oGYMcMtdEr9kdPyOqQMVJjT+PeciVzfAAoucNegg5n/ufbIBhHZ7f
        +uboKyfBOUH07Ip9Sy+5F9EDK3Zu/n77zl74BlEd5FxhR2TN4YgeVrkfzvnHlV3xI6K66Hk4Hc8Sx9l3
        ED1IT2FVjDsHo24kOh5ZcgqiB+hzbIpJ5UpE9dK7WAmdYo/6FqIH6ChMMr6dbyCqm45BpzghiQrWEygh
        +yGqnx5Hp9yGqGDtiVLi8BvV0T5iK7SKr1dqM+NllBSX4lE9dRpaxVlfVKDOQklZBakvy/lJqyxBVKC2
        QGm5A1FdnZq3yt2ICnS7q8QsRlRftRqqXZtHhd2HErMDovrKkaJx3LyICrscJcalcGqZ7uq0cVJz7TNR
        alJ1btVpp7amTkCp+QRRnc9H47isjAo7FaXmK0R1dkRrnE8RFdbbhkPHuPzN+qWlFhluRZeYLRHVV4eg
        cR5BVNiTKDEHIqqvWu0QpdbaP2ESGyDDcimi+np2sToax+3vqEB58lta3AaL6roMreIBZGrLyVOckrIN
        UpOg69E6LyEq1IOK9VFKrkBUT3V6W89BVKguRgnxXDC1Te6eZad9QW9mpA5Av8MkN0SrXIuofroKneM1
        l6hweR4wyeyE1OTnD7TeDhvMdrCw6CHySswkshbqzivcz8wWe/3oIfKsbm+MM/6uvVEW1UeuCrOeUXow
        6rWU6GH6FrthHPHD1/0s5YWL7KmbGMlWbzXnbhBf+7pvXk6IOp8IpXIjoodWnIzY8/Zxb8cOr+43X/Ew
        p7e4BkgdQgx6EwcgR7z64lCX6u1ncytvAXrLOliK6OGzPQOvvbZZPHmnyLfJ/iUqu07vjeDdnRcRPTzy
        Ne6CQ6av8toYjJsZW8PX9zK8gKicJnpvBJeYDyJ6+ChcVruFldrGyqH3RvCbuxBN7wvm4BvoJsiHA38X
        6b0RjK91k59EFw63jvPVSGNfUUQj+DYsQu6b4hVHAS9PRvP7YhrBOAk5Fl6gGOVC5TDOQK+Bmx51KaoR
        qtiznw43WF2bR5WazYXXq7gOziU8+h41RTbCYGyQfbAQXpL2jEFexDoCO2MNdEnxjTCO2E8M+88b00bA
        tBEwbQRMGwHTRsCcb4RRh0j/g8aczSiNUOpFsGwZ1ggu0ed86voEr9r/L5JqhJJvwmWP55v3wLvGb+OM
        mZmZef8AgSMtP3XdhBwAAAAASUVORK5CYII=
</value>
  </data>
</root>